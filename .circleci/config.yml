version: 2 # use CircleCI 2.0
jobs: # A basic unit of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    # directory where steps are run
    working_directory: ~/training/second_upload
    docker: # run the steps with Docker
      # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: circleci/python:3.6.4
        environment: # environment variables for primary container
          DATABASE_URL: postgresql://godfrey@localhost/makarablog?sslmode=disable
      # CircleCI PostgreSQL images available at: https://hub.docker.com/r/circleci/postgres/
      - image: circleci/postgres:9.6.2
        environment: # environment variables for the Postgres container.
          POSTGRES_USER: godfrey
          POSTGRES_DB: makarablog
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: deps9-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          command: |
            sudo pip3 install -r requirements.txt
            pip install --upgrade pip
            pip install ansible
      - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
          key: deps9-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
            
      - run:
          command: |
            rm -rf venv
            python3 -m venv  venv
            . venv/bin/activate
            sudo pip3 install -r requirements.txt
            tox -r
      # - run:
      #     name: Setup the database
      #     command: 
      #       sudo apt-get install postgresql postgresql-contrib
      #       pwd
      #       psql -h localhost -U ubuntu -d makarablog -a -f schema.sql
      - run:
          name: Run the Tests
          command: |
            #pytest
            . venv/bin/activate
            pip3 install -r requirements.txt
            pip install pytest
            #pytest --cov --fail-under=80
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: test-results

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = godii" >> ~/.pypirc
            echo -e "password = $password" >> ~/.pypirc

      - run:
          name: create packages
          command: |
            python setup.py sdist
      - run:
          name: upload to pypi
          command: |
            python3 -m venv  venv
             . venv/bin/activate
             pip3 install --upgrade pip
            pip3 install twine
      #       twine upload dist/*  --skip-existing 
      # - run:
      #     name: executing ansible to a remote server
      #     command: |
      #        . venv/bin/activate
      #        ansible-playbook  -i hosts makarablog.yml